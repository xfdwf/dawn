{% comment %} /sections/background-video.liquid {% endcomment %}

{%- liquid
  assign unique = section.id
  assign video_id = section.settings.video_link.id
  assign section_height = section.settings.video_height
  assign title = section.settings.title
  assign heading_highlight_type = section.settings.heading_highlight_type
  assign highlight_color = section.settings.highlight_color
  assign highlight_text_color = section.settings.highlight_text_color
  assign heading_size = section.settings.heading_size | times: 0.01
  assign text = section.settings.text | escape
  assign text_color = section.settings.text_color
  assign image = section.settings.image
  assign button_text = section.settings.button_text
  assign button_link = section.settings.button_link | default: '#'
  assign button_style = section.settings.button_style
  assign button_color = section.settings.button_color
  assign button_size = section.settings.button_size
  assign text_position = section.settings.text_position
  assign show_text_shadow = settings.show_text_shadow
  assign overlay_opacity = section.settings.overlay_opacity | times: 0.01
  assign animations_enabled = settings.animations_enabled
  assign animation_anchor = '#FeaturedVideo--' | append: section.id
  assign animation_delay = 150
  assign video_link = section.settings.video_link
  assign background_video = section.settings.video_link_bg
-%}{% comment %}
  Enhanced text decorations options - Liqiud variables

  Dependencies:
    - Title liquid object from settings: `assign title = section.settings.title`
    - Highlight type from settings: `assign heading_highlight_type = section.settings.heading_highlight_type`
    - Highlight color from settings: `assign highlight_color = section.settings.highlight_color or assign highlight_color = block.settings.highlight_color`
    - SVG icons:
      - icon-squiggle.svg (assets)
      - icon-circle.liquid (snippet)
{% endcomment %}

{%- liquid
  comment
   Highlighted words count
  endcomment
  assign title_temp = title | split: '<em>'
  assign em_arr = ''
  if title_temp.size > 1
    for text_part in title_temp offset: 1
      assign em_text = text_part | split: '</em>' | first
      assign em_arr = em_arr | append: '#separator#' | append: em_text
    endfor
  endif
  assign em_arr = em_arr | split: '#separator#'
  assign words_count_arr = ''
  assign letters_count_arr = ''
  if em_arr.size > 0
    for words in em_arr offset: 1
      assign word = words | split: ' '
      assign words_count_arr = words_count_arr | append: word.size | append: ', '
      assign letters_count_arr = letters_count_arr | append: words.size | append: ', '
    endfor
  endif

  assign words_count_arr = words_count_arr | replace_last: ', ', '' | split: ', '
  assign letters_count_arr = letters_count_arr | replace_last: ', ', '' | split: ', '

  comment
   Main highlight types logic
  endcomment
  assign icon_url = ''
  assign icon_color = 'var(--text)'

  if highlight_color != 'rgba(0,0,0,0)' and highlight_color != ''
    assign icon_color = highlight_color
  endif

  capture text_highlight_icon
    assign has_text_highlight = false

    if title contains '<em>'
      case heading_highlight_type
        when 'squiggle'
          assign icon_url = 'icon-squiggle.svg' | asset_url
          echo '<span class="text-highlight__icon"></span>'
        when 'circle'
          echo '<span class="text-highlight__icon">'
          render 'icon-circle', color: icon_color
          echo '</span>'
        when 'stroke' or 'circle' or 'squiggle' or 'highlight' or 'highlight-color' or 'underline'
          assign has_text_highlight = true
      endcase
    endif
  endcapture

  capture icon_bg
    if icon_url != ''
      echo 'url( "' | append: icon_url | append: '" )'
    else
      echo 'none'
    endif
  endcapture
  capture icon_styles
    assign icon_bg = icon_bg | replace: '"', "'"
    echo 'style="--icon-url: ' | append: icon_bg | append: ';' | append: '--icon-color: ' | append: icon_color | append: ';"'
  endcapture

  assign text_highlight_wrapper_class = 'text-highlight-wrapper' | append: ' text-highlight-wrapper--' | append: heading_highlight_type
  capture text_highlight_start
    echo '<span class="text-highlight" ' | append: icon_styles | append: '>'
  endcapture
  capture text_highlight_end
    echo text_highlight_icon
    echo '</span>'
  endcapture

  if title != blank and title contains '<em>'
    case heading_highlight_type
      when 'squiggle' or 'circle' or 'stroke' or 'highlight' or 'highlight-color' or 'underline'
        assign title = title | replace: '<em>', text_highlight_start | replace: '</em>', text_highlight_end

      when 'circle'
        comment
          Update icon's holder class based on the italicised words count
        endcomment
        assign title = title | split: 'class="text-highlight"'
        assign title_mod = ''
        for title_part in title offset: 1
          assign current_part = title_part

          if title_part contains 'text-highlight__icon'
            capture highlight_icon_classes
              echo 'text-highlight__icon'
              assign current_count = words_count_arr[forloop.index0] | times: 1
              assign letters_count = letters_count_arr[forloop.index0] | times: 1
              if current_count == 1
                echo ' text-highlight__icon--single-word'
              endif
              if letters_count < 6
                echo ' text-highlight__icon--short'
                echo ' text-highlight__icon--l' | append: letters_count
              endif
              if letters_count > 15
                echo ' text-highlight__icon--long'
              endif
            endcapture

            assign current_part = title_part | replace: 'text-highlight__icon', highlight_icon_classes
          endif

          unless forloop.last
            assign title_mod = title_mod | append: current_part | append: 'class="text-highlight"'
          else
            assign title_mod = title_mod | append: current_part
          endunless
        endfor
        assign title_first_part = title | first | append: 'class="text-highlight"'
        assign title_mod = title_mod | prepend: title_first_part
        assign title = title_mod
    endcase
  endif
-%}{%- style -%}
  #FeaturedVideo--{{ section.id }} { --overlay-opacity: {{ overlay_opacity }}; }
  #FeaturedVideo--{{ section.id }} .main-heading {

    {%- if heading_highlight_type != 'highlight' -%}
      --highlight-color: var(--text);
    {%- endif -%}

    {%- if highlight_color != 'rgba(0,0,0,0)' and highlight_color != '' -%}
      --highlight-color: {{ highlight_color }};
    {%- endif -%}

    {%- if highlight_text_color != 'rgba(0,0,0,0)' and highlight_text_color != '' -%}
      --highlight-text-color: {{ highlight_text_color }};
    {%- endif -%}
  }
  #FeaturedVideo--{{ section.id }} .main-heading { --adjust-heading: calc(var(--FONT-ADJUST-HEADING) * {{ heading_size }}); }
{%- endstyle -%}

<section id="FeaturedVideo--{{ unique }}"
  class="featured-video-section {{ section_height }}"
  data-section-id="{{ unique }}"
  data-section-type="featured-video">
  {%- style -%}
    .video-with-text-wrapper{
        width: var(--site-width);
        max-width: 100%;
        display:flex;
        margin: 0 auto;
        padding: 0 var(--gutter);
        align-items: stretch;
        justify-content:space-around;
        flex:1;
    }
    .video-with-text-wrapper video{
      min-width: 100%;
      min-height: 100%;
      object-fit: cover;
      mix-blend-mode: darken;
    }
    .text-wrapper{
      color:#171719; 
      flex:1;
      display:flex;
      flex-direction: column;
      align-items:center;
      justify-content:center;
      padding-right:40px;
    }
    .video-wrapper{
      height:auto;
    }
    h2 p{
      font-size: var(--heading-size);
    }
    @media only screen and (max-width: 780px) {
      .video-with-text-wrapper{
        width: 100%;
        flex-direction: column;
        padding: 0 var(--gutter-mobile);
      }
      .text-wrapper{
        padding-right: 0;
        margin-bottom: 30px;
      }
      .video-wrapper video{
        min-width: 99.5%;
        flex:1;
        margin-left: 5px;
      }
    }

    {%- endstyle -%}

    <div class="video-with-text-wrapper video__container--{{ unique }} {{ text_color }}" id="video-{{ unique }}-container">
      <div class="text-wrapper" >
        <h2 style="color:#171719;">{{ section.settings.title }}</h2>
        <div>{{ section.settings.text }}</div>
      </div>
      <div class="video-wrapper" >
        <video
          id="{{ unique }}-video-background"
          data-video-type="native"
          data-video-autoplay
          playsinline
          autoplay
          loop
          muted
          width="320"
          height="240">
          <source src="{{ background_video }}" type="video/mp4" />
        </video>
      </div>
    </div>
</section>

{% schema %}
{
  "name": "Video text",
  "class": "featured-video-section supports-transparent-header",
  "settings": [
    {
      "type": "header",
      "content": "Layout"
    },
    {
      "type": "select",
      "id": "video_height",
      "label": "Height",
      "default": "six-fifty-height",
      "options": [
        { "value": "full-height", "label": "Full screen" },
        { "value": "two-thirds-height", "label": "Two thirds of screen" },
        { "value": "one-half-height", "label": "One half of screen" },
        { "value": "one-third-height", "label": "One third of screen" },
        { "value": "one-fifth-height", "label": "One fifth of screen" },
        { "value": "seven-fifty-height", "label": "750px" },
        { "value": "six-fifty-height", "label": "650px" },
        { "value": "five-fifty-height ", "label": "550px" },
        { "value": "four-fifty-height", "label": "450px" }
      ]
    },
   
    {
      "type": "header",
      "content": "Video"
    },
    {
      "type": "text",
      "id": "video_link_bg",
      "label": "Video background link",
      "info": "MP4 video link from [files](/admin/content/files?selectedView=all&media_type=VIDEO)"
    },
    
    
    {
      "type": "header",
      "content": "Text"
    },
   
    {
      "type": "richtext",
      "id": "title",
      "label": "Heading",
      "default": "<p>Welcome to Palo Alto</p>",
      "info": "Highlight one or two key words in your heading by italicizing them, then choose the highlight option below"
    },
   
    {
      "type": "textarea",
      "id": "text",
      "label": "Text",
      "default": "This text helps you provide some more detail to the title above."
    }
    
  ],
  "presets": [
    {
      "name": "Video text",
      "category": "Image"
    }
  ],
  "disabled_on": {
    "groups": ["header","aside","footer"]
  }
}
{% endschema %}