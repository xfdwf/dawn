<!-- /sections/section-sticky-images-and-text.liquid -->
{%- liquid
  assign scroll_direction = section.settings.scroll_direction
  assign text_alignment = section.settings.text_alignment
  assign image_position = section.settings.image_position
  assign space_around_images = section.settings.space_around_images
  assign image_width = section.settings.image_width
  assign aspect_ratio_desktop = section.settings.aspect_ratio_desktop
  assign image_ratio_desktop = aspect_ratio_desktop | times: 100
  assign aspect_ratio_mobile = section.settings.aspect_ratio_mobile
  assign show_single_text = section.settings.show_single_text
  assign image_ratio_mobile = aspect_ratio_mobile | times: 100
  assign text_color = section.settings.text_color
  assign bg_color = section.settings.bg_color
  assign gradient = section.settings.gradient | default: 'none'
  assign width = section.settings.width
  assign padding_top = section.settings.padding_top
  assign padding_bottom = section.settings.padding_bottom

  assign blocks_size = section.blocks.size
  assign unique = section.id

  assign bg_color_set = false
  assign section_id = 'stickyImagesAndText--' | append: unique
  assign selector_id = '#' | append: section_id
  assign animation_anchor = selector_id
  assign animations_enabled = settings.animations_enabled

  case text_alignment
    when 'left'
    assign text_alignment_class = 'text-left'
    when 'center'
    assign text_alignment_class = 'text-center'
    when 'right'
    assign text_alignment_class = 'text-right'
  endcase

  case image_width
    when 'standard'
      assign image_width_class = 'sticky-images-and-text--image-fifty'
      assign block_width_percent = 0.5
    when 'wide'
      assign image_width_class = 'sticky-images-and-text--image-sixty'
      assign block_width_percent = 0.6
  endcase

  assign desktop_space = 0
  assign tablet_space = 0
  assign mobile_space = 40
  if space_around_images
    assign desktop_space = 120
    assign tablet_space = 40
  endif

  assign img_width_lg = 'calc((100vw - ' | append: desktop_space | append: 'px) * ' | append: block_width_percent | append: ')'
  assign img_width_md = 'calc((100vw - ' | append: tablet_space | append: 'px) * ' | append: block_width_percent | append: ')'
  assign img_width_sm = 'calc(100vw - ' | append: mobile_space | append: 'px)'
  assign sizes = '(min-width: 1024px) ' | append: img_width_lg | append: ', (min-width: 768px) ' | append: img_width_md | append: ', ' | append: img_width_sm

  if bg_color != 'rgba(0,0,0,0)' and bg_color != ''
    assign bg_color_set = true
  else
    if gradient != 'none'
      assign bg_color_set = true
    endif
  endif

  assign text_content_from_blocks = ''
  assign images_from_blocks = ''
-%}

{%- for block in section.blocks -%}
  {%- liquid
    assign image = block.settings.image
    assign image_mobile = block.settings.image_mobile
    assign subheading = block.settings.subheading
    assign title = block.settings.title
    assign heading_highlight_type = block.settings.heading_highlight_type
    assign highlight_color = block.settings.highlight_color
    assign highlight_text_color = block.settings.highlight_text_color
    assign heading_size = block.settings.heading_size | times: 0.01
    assign content = block.settings.content
    assign text_size = block.settings.text_size | times: 0.01
    assign button_text = block.settings.button_text
    assign button_link = block.settings.button_link
    assign button_color = block.settings.button_color
    assign button_style = block.settings.button_style
    assign button_size = block.settings.button_size
    assign video_link = block.settings.video_link
    assign video_text = block.settings.video_text
    assign animation_order = 1

    assign entire_image_link = false
    if button_text == blank and button_link != blank
      assign entire_image_link = true
    endif

    capture block_images
      capture image_classes
        echo 'image-wrapper'
        if entire_image_link
          echo ' hover-scale'
        endif
      endcapture

      capture placeholder_svg
        echo 'lifestyle-'
        cycle 1, 2
      endcapture

      if entire_image_link
        echo '<a href="' | append: button_link | append: '">'
      endif

      render 'image-fill', image_desktop: image, image_mobile: image_mobile, sizes: sizes, classes: image_classes, placeholder_svg: placeholder_svg

      if entire_image_link
        echo '</a>'
      endif
    endcapture

    assign default_label = 'general.meta.page' | t: page: forloop.index | append: ': '
    assign dot_label = default_label | append: title | strip_html | default: image.alt

    assign heading_size_mobile = heading_size
    if heading_size > 1.5
      assign heading_size_mobile = heading_size | times: 0.85
    endif
  -%}

  {%- capture text_content_markup -%}
    {%- if subheading != blank or title != blank or content != blank or button_text != blank or video_link != blank -%}
      <div class="sticky-text{% if forloop.index0 == 0 %} is-active{% endif %}"
        data-sticky-text
        data-index="{{ forloop.index0 }}"
        {% if title != blank %}
          style="--adjust-heading-desktop: calc(var(--FONT-ADJUST-HEADING) * {{ heading_size }}); --adjust-heading-mobile: calc(var(--FONT-ADJUST-HEADING) * {{ heading_size_mobile }});
            {%- if heading_highlight_type != 'highlight' -%}
              --highlight-color: var(--text);
            {%- endif -%}
            {%- if highlight_color != 'rgba(0,0,0,0)' and highlight_color != '' -%}
              --highlight-color: {{ highlight_color }};
            {%- endif -%}
            {%- if highlight_text_color != 'rgba(0,0,0,0)' and highlight_text_color != '' -%}
              --highlight-text-color: {{ highlight_text_color }};
            {%- endif -%}
          "
        {% endif %}
      >
        <div class="sticky-text__inner" data-sticky-text-inner>
          {%- if subheading != blank -%}
            <div class="sticky-text__subheading subheading-text main-subheading"
              {% if animations_enabled %}
                data-aos="when-active-animate-up"
                data-aos-anchor="{{ animation_anchor }}"
                data-aos-order="{{ animation_order }}"
                {%- assign animation_order = animation_order | plus: 1 -%}
              {% endif %}
            >
              {{- subheading -}}
            </div>
          {%- endif -%}

          {%- if title != blank -%}{% comment %}
  Enhanced text decorations options - Liqiud variables

  Dependencies:
    - Title liquid object from settings: `assign title = section.settings.title`
    - Highlight type from settings: `assign heading_highlight_type = section.settings.heading_highlight_type`
    - Highlight color from settings: `assign highlight_color = section.settings.highlight_color or assign highlight_color = block.settings.highlight_color`
    - SVG icons:
      - icon-squiggle.svg (assets)
      - icon-circle.liquid (snippet)
{% endcomment %}

{%- liquid
  comment
   Highlighted words count
  endcomment
  assign title_temp = title | split: '<em>'
  assign em_arr = ''
  if title_temp.size > 1
    for text_part in title_temp offset: 1
      assign em_text = text_part | split: '</em>' | first
      assign em_arr = em_arr | append: '#separator#' | append: em_text
    endfor
  endif
  assign em_arr = em_arr | split: '#separator#'
  assign words_count_arr = ''
  assign letters_count_arr = ''
  if em_arr.size > 0
    for words in em_arr offset: 1
      assign word = words | split: ' '
      assign words_count_arr = words_count_arr | append: word.size | append: ', '
      assign letters_count_arr = letters_count_arr | append: words.size | append: ', '
    endfor
  endif

  assign words_count_arr = words_count_arr | replace_last: ', ', '' | split: ', '
  assign letters_count_arr = letters_count_arr | replace_last: ', ', '' | split: ', '

  comment
   Main highlight types logic
  endcomment
  assign icon_url = ''
  assign icon_color = 'var(--text)'

  if highlight_color != 'rgba(0,0,0,0)' and highlight_color != ''
    assign icon_color = highlight_color
  endif

  capture text_highlight_icon
    assign has_text_highlight = false

    if title contains '<em>'
      case heading_highlight_type
        when 'squiggle'
          assign icon_url = 'icon-squiggle.svg' | asset_url
          echo '<span class="text-highlight__icon"></span>'
        when 'circle'
          echo '<span class="text-highlight__icon">'
          render 'icon-circle', color: icon_color
          echo '</span>'
        when 'stroke' or 'circle' or 'squiggle' or 'highlight' or 'highlight-color' or 'underline'
          assign has_text_highlight = true
      endcase
    endif
  endcapture

  capture icon_bg
    if icon_url != ''
      echo 'url( "' | append: icon_url | append: '" )'
    else
      echo 'none'
    endif
  endcapture
  capture icon_styles
    assign icon_bg = icon_bg | replace: '"', "'"
    echo 'style="--icon-url: ' | append: icon_bg | append: ';' | append: '--icon-color: ' | append: icon_color | append: ';"'
  endcapture

  assign text_highlight_wrapper_class = 'text-highlight-wrapper' | append: ' text-highlight-wrapper--' | append: heading_highlight_type
  capture text_highlight_start
    echo '<span class="text-highlight" ' | append: icon_styles | append: '>'
  endcapture
  capture text_highlight_end
    echo text_highlight_icon
    echo '</span>'
  endcapture

  if title != blank and title contains '<em>'
    case heading_highlight_type
      when 'squiggle' or 'circle' or 'stroke' or 'highlight' or 'highlight-color' or 'underline'
        assign title = title | replace: '<em>', text_highlight_start | replace: '</em>', text_highlight_end

      when 'circle'
        comment
          Update icon's holder class based on the italicised words count
        endcomment
        assign title = title | split: 'class="text-highlight"'
        assign title_mod = ''
        for title_part in title offset: 1
          assign current_part = title_part

          if title_part contains 'text-highlight__icon'
            capture highlight_icon_classes
              echo 'text-highlight__icon'
              assign current_count = words_count_arr[forloop.index0] | times: 1
              assign letters_count = letters_count_arr[forloop.index0] | times: 1
              if current_count == 1
                echo ' text-highlight__icon--single-word'
              endif
              if letters_count < 6
                echo ' text-highlight__icon--short'
                echo ' text-highlight__icon--l' | append: letters_count
              endif
              if letters_count > 15
                echo ' text-highlight__icon--long'
              endif
            endcapture

            assign current_part = title_part | replace: 'text-highlight__icon', highlight_icon_classes
          endif

          unless forloop.last
            assign title_mod = title_mod | append: current_part | append: 'class="text-highlight"'
          else
            assign title_mod = title_mod | append: current_part
          endunless
        endfor
        assign title_first_part = title | first | append: 'class="text-highlight"'
        assign title_mod = title_mod | prepend: title_first_part
        assign title = title_mod
    endcase
  endif
-%}{%- liquid
              assign numbers_string = '0%,1%,2%,3%,4%,5%,6%,7%,8%,9%' | split: ','
              assign has_percent_off = false
              assign has_number_percent = false
              for num in numbers_string
                if title contains num
                  assign has_number_percent = true
                endif
              endfor

              if has_number_percent
                assign title = title | replace: '%', '<sup>%</sup>'

                if title contains '<sup>%</sup> off' or title contains '<sup>%</sup> OFF' or title contains '<sup>%</sup> Off'
                  assign has_percent_off = true
                  assign title = title | replace: '<sup>%</sup> off', '<sup>%</sup> <small>off</small>'
                  assign title = title | replace: '<sup>%</sup> OFF', '<sup>%</sup> <small>OFF</small>'
                  assign title = title | replace: '<sup>%</sup> Off', '<sup>%</sup> <small>Off</small>'
                endif
              endif
            -%}

            <h3 class="sticky-text__heading h2{% if has_text_highlight %} {{ text_highlight_wrapper_class }}{% endif %}{% if has_percent_off %} haspercentoff{% elsif has_number_percent %} hasnumberpercent{% endif %}"
              {% if animations_enabled %}
                data-aos="when-active-animate-up"
                data-aos-anchor="{{ animation_anchor }}"
                data-aos-order="{{ animation_order }}"
                {%- assign animation_order = animation_order | plus: 1 -%}
              {% endif %}
            >
              {%- render 'title-with-highlights',
                title: title,
                heading_highlight_type: heading_highlight_type,
                highlight_color: highlight_color,
                has_text_highlight: has_text_highlight
              -%}
            </h3>

            {%- if settings.show_spacer_lines -%}
              <hr
                {% if animations_enabled %}
                  data-aos="when-active-animate-up"
                  data-aos-order="{{ animation_order }}"
                  data-aos-anchor="{{ animation_anchor }}"
                  {%- assign animation_order = animation_order | plus: 1 -%}
                {% endif %}
              >
            {%- endif -%}
          {%- endif -%}

          {%- if content != blank -%}
            <div class="sticky-text__text"
              style="--adjust-body: calc(var(--FONT-ADJUST-BODY) * {{ text_size }});"
              {% if animations_enabled %}
                data-aos="when-active-animate-up"
                data-aos-anchor="{{ animation_anchor }}"
                data-aos-order="{{ animation_order }}"
                {%- assign animation_order = animation_order | plus: 1 -%}
              {% endif %}
            >
              {{- content -}}
            </div>
          {%- endif -%}

          {%- if button_text != blank or video_link != blank -%}
            <div class="sticky-text__buttons main-buttons">
              {%- if button_text != blank -%}
                <div class="sticky-text__button{% if button_style == 'btn--text' %} sticky-text__button--text{% endif %} main-buttons__item"
                  {% if animations_enabled %}
                    data-aos="when-active-animate-up"
                    data-aos-anchor="{{ animation_anchor }}"
                    data-aos-order="{{ animation_order }}"
                    {%- assign animation_order = animation_order | plus: 1 -%}
                  {% endif %}
                >
                  <a href="{{ button_link | default: '#!' }}"
                    class="btn {{ button_style }} {{ button_size }} {{ button_color }}"
                    aria-label="{{ button_text }}"
                  >
                    {{ button_text }}
                  </a>
                </div>
              {%- endif -%}

              {%- if video_link != blank -%}{%- liquid
  assign video_link_downcase = video_link | downcase
  assign video_type = ''
  assign video_id = ''
  assign video_parent_id = 'item-video-' | append: unique

  if video_link contains "vimeo.com"
    assign video_type = "vimeo"
  elsif video_link contains "youtube.com"
    assign video_type = "youtube"
  elsif video_link contains "youtu.be"
    assign video_type = "youtube"
    assign youtubeShortlink = true
  elsif video_link_downcase contains ".mp4"
    assign video_type = "native"
  endif

  assign link_array = video_link | split: '/'
  assign id_with_params = link_array | last

  if video_type == "vimeo" or youtubeShortlink
  comment
    https://vimeo.com/[ID]?foo=bar&baz=boo
    https://youtu.be/[ID]?foo=bar&baz=boo
  endcomment
    assign starts_with_id = id_with_params | split: '?'
    assign video_id = starts_with_id | first
  elsif video_type == "youtube" 
  comment
    https://youtube.com/watch?v=[ID]?foo=bar&baz=boo
  endcomment
    assign first_param = id_with_params | split: '&' | first
    assign watch_then_id = first_param | split: '?'
    assign equals_id = watch_then_id[1]
    assign ends_with_id = equals_id | split: '='
    assign video_id = ends_with_id | last
  endif

  if video_type == 'youtube'
    capture video_link
      echo 'https://www.youtube.com/watch?v=' | append: video_id
    endcapture
  elsif video_type == 'vimeo'
    capture video_link
      echo 'https://vimeo.com/' | append: video_id
    endcapture
  endif
-%}<div class="sticky-text__button sticky-text__button--video main-buttons__item"
                  {% if animations_enabled %}
                    data-aos="when-active-animate-up"
                    data-aos-anchor="{{ animation_anchor }}"
                    data-aos-order="{{ animation_order }}"
                    {%- assign animation_order = animation_order | plus: 1 -%}
                  {% endif %}
                >
                  <a class="video-text-link" href="{{ video_link | default: '#!' }}"
                    {% unless video_link == blank %}
                      data-video-play="{%- render 'photoswipe-video-html' item_link: video_link , item_link_type: video_type, item_link_id: video_id, item_id: video_parent_id -%}"
                    {% endunless %}
                  >
                    {%- render 'icon-play' -%}

                    {%- if video_text != blank -%}
                      <span>{{ video_text }}</span>
                    {%- endif -%}
                  </a>
                </div>
              {%- endif -%}
            </div>
          {%- endif -%}
        </div>
      </div>
    {%- endif -%}
  {%- endcapture -%}

  {%- if show_single_text and forloop.index0 > 0 -%}
    {%- assign text_content_markup = '' -%}
  {%- endif -%}

  {%- assign text_content_from_blocks = text_content_from_blocks | append: text_content_markup -%}

  {%- capture image_markup -%}
    <div class="sticky-images-and-text__image{% if forloop.index0 == 0 %} is-active{% endif %}"
      data-sticky-image data-index="{{ forloop.index0 }}"
      {{ block.shopify_attributes }}
    >
      {{ block_images }}
    </div>
  {%- endcapture -%}
  {%- assign images_from_blocks = images_from_blocks | append: image_markup -%}

  {%- capture dots_markup -%}
    {{ dots_markup }}

    <button type="button"
      class="sticky-images-and-text__dot{% if forloop.index0 == 0 %} is-active{% endif %}"
      data-sticky-dot
      data-index="{{ forloop.index0 }}"
    >
      <span class="visually-hidden">{{ dot_label }}</span>
    </button>
  {%- endcapture -%}

  {%- capture no_js_markup -%}
    {{ no_js_markup }}
    <div class="sticky-images-and-text__wrapper">
      {{ text_content_markup }}
      {{ image_markup }}
    </div>
  {%- endcapture -%}
{%- endfor -%}

{%- style -%}
  {{ selector_id }} {
    --PT: {{ padding_top }}px;
    --PB: {{ padding_bottom }}px;

    {%- if bg_color_set -%}
      {%- if gradient != 'none' -%}
        --bg: {{ gradient }};
      {%- else -%}
        --bg: {{ bg_color }};
      {%- endif -%}
    {%- endif %}
  }

  {%- if request.visual_preview_mode -%}
    .sticky-images-and-text { --header-sticky-height: 0px; }
    .sticky-images-and-text .sticky-images-and-text__aside { min-height: initial; }
    .sticky-images-and-text .sticky-images-and-text__body { min-height: initial; }

    @media screen and (min-width: 768px) {
      .sticky-images-and-text--vertical .sticky-images-and-text__content { margin: auto; }
      .sticky-images-and-text--vertical .sticky-images-and-text__dots-inner { --top: 0px !important; height: 100% !important; }
      .sticky-images-and-text--vertical { --image-ratio-desktop: 100% !important; }
      .sticky-images-and-text--vertical .sticky-images-and-text__image:nth-child(n + 3) { display: none; }
    }
    @media screen and (max-width: 767px) {
      .sticky-images-and-text { --image-ratio-mobile: 100% !important; }
      .sticky-images-and-text .sticky-text:nth-child(n + 2),
      .sticky-images-and-text .sticky-images-and-text__image:nth-child(n + 2) { display: none; }
      .sticky-images-and-text__content { min-height: initial; }
    }
  {%- endif -%}
{%- endstyle -%}

<div id="{{ section_id }}"
  class="sticky-images-and-text sticky-images-and-text--{{ scroll_direction }} section-padding {{ image_position }}{% if space_around_images %} sticky-images-and-text--with-gaps{% endif %} {{ image_width_class }} {{ text_alignment_class }} {{ text_color }}{% if text_content_from_blocks == blank %} sticky-images-and-text--images-only{% endif %}"
  data-scroll-direction="{{ scroll_direction }}{% if image_position == 'is-reversed' %}-reversed{% endif %}"
  {% if space_around_images %} data-sticky-with-gaps {% endif %}
  {% if show_single_text %} data-sticky-single-text {% endif %}
  data-section-id="{{ unique }}"
  data-section-type="sticky-images-and-text"
  style="
    {% if blocks_size > 1 %}
      --images-count: {{ blocks_size }};
    {% endif %}
    --image-ratio-desktop: {{ image_ratio_desktop }}%;
    --image-ratio-mobile: {{ image_ratio_mobile }}%;
  "
>
  {%- if blocks_size > 0 -%}
    <div class="sticky-images-and-text__body {{ width }}" data-sticky-wrapper>
      <div class="sticky-images-and-text__dots js-only">
        <div class="sticky-images-and-text__dots-inner">
          {{ dots_markup }}
        </div>
      </div>

      <div class="sticky-images-and-text__content js-only" data-sticky-content>
        {%- if text_content_from_blocks != blank -%}
          {{ text_content_from_blocks }}
        {%- endif -%}
      </div>

      <div class="sticky-images-and-text__aside js-only" data-sticky-aside>
        <div class="sticky-images-and-text__inner" data-sticky-inner>
          <div class="sticky-images-and-text__images" data-sticky-images>
            {{ images_from_blocks }}
          </div>
        </div>
      </div>

      <noscript>{{ no_js_markup }}</noscript>
    </div>
  {%- else -%}
    {%- render 'no-blocks' -%}
  {%- endif -%}
</div>

{% schema %}
  {
    "name": "Sticky images and text",
    "settings": [
      {
        "type": "header",
        "content": "Layout"
      },
      {
        "type": "select",
        "id": "scroll_direction",
        "label": "Scroll direction",
        "default": "horizontal",
        "options": [
          { "value": "vertical", "label": "Vertical" },
          { "value": "horizontal", "label": "Horizontal" }
        ]
      },
      {
        "type": "text_alignment",
        "id": "text_alignment",
        "label": "Text alignment",
        "default": "left"
      },
      {
        "type": "select",
        "id": "image_position",
        "label": "Image position",
        "default": "",
        "options": [
          { "value": "is-reversed", "label": "Left" },
          { "value": "", "label": "Right" }
        ]
      },
      {
        "type": "checkbox",
        "id": "space_around_images",
        "label": "Add space between images",
        "default": true
      },
      {
        "type": "select",
        "id": "image_width",
        "label": "Image width",
        "default": "standard",
        "options": [
          { "value": "standard", "label": "Standard" },
          { "value": "wide", "label": "Wide" }
        ]
      },
      {
        "type": "range",
        "id": "aspect_ratio_desktop",
        "min": 0.8,
        "max": 2,
        "step": 0.1,
        "unit": ":1",
        "label": "Image scaling ratio",
        "info": "Wide to tall. Applies to Vertical scroll direction only",
        "default": 1.5
      },
      {
        "type": "range",
        "id": "aspect_ratio_mobile",
        "min": 0.8,
        "max": 2,
        "step": 0.1,
        "unit": ":1",
        "label": "Image scaling ratio (mobile)",
        "info": "Wide to tall",
        "default": 1.5
      },
      {
        "type": "checkbox",
        "id": "show_single_text",
        "label": "Show single text",
        "info": "Display only the text added to the first block",
        "default": false
      },
      {
        "type": "header",
        "content": "Colors"
      },
      {
        "type": "select",
        "id": "text_color",
        "label": "Text",
        "default": "text-dark",
        "options": [
          { "value": "text-light", "label": "Light" },
          { "value": "text-dark", "label": "Dark" }
        ]
      },
      {
        "type": "color",
        "id": "bg_color",
        "label": "Background"
      },
      {
        "type": "color_background",
        "id": "gradient",
        "label": "Overlay gradient",
        "default": "linear-gradient(180deg, rgba(255, 255, 255, 1) 3%, rgba(223, 223, 223, 1) 100%)"
      },
      {
        "type": "header",
        "content": "Section spacing"
      },
      {
        "type": "select",
        "id": "width",
        "label": "Width",
        "default": "wrapper--full",
        "options": [
          { "value": "wrapper--full", "label": "Full width" },
          { "value": "wrapper", "label": "Page width" }
        ]
      },
      {
        "type": "range",
        "id": "padding_top",
        "min": 0,
        "max": 100,
        "step": 2,
        "unit": "px",
        "label": "Padding top",
        "default": 0
      },
      {
        "type": "range",
        "id": "padding_bottom",
        "min": 0,
        "max": 100,
        "step": 2,
        "unit": "px",
        "label": "Padding bottom",
        "default": 0
      }
    ],
    "blocks": [
      {
        "type": "slide",
        "name": "Image and text",
        "settings": [
          {
            "type": "image_picker",
            "id": "image",
            "label": "Image"
          },
          {
            "type": "image_picker",
            "id": "image_mobile",
            "label": "Image (mobile)"
          },
          {
            "type": "text",
            "id": "subheading",
            "label": "Subheading"
          },
          {
            "type": "richtext",
            "id": "title",
            "label": "Heading",
            "default": "<p>Everything's on sale</p>",
            "info": "Highlight one or two key words in your heading by italicizing them, then choose the highlight option below."
          },
          {
            "type": "header",
            "content": "Highlight"
          },
          {
            "type": "select",
            "id": "heading_highlight_type",
            "label": "Type",
            "default": "circle",
            "options": [
              { "value": "italics", "label": "Italics (no decoration)" },
              { "value": "highlight", "label": "Highlight" },
              { "value": "highlight-color", "label": "Text color" },
              { "value": "underline", "label": "Underline" },
              { "value": "squiggle", "label": "Squiggle" },
              { "value": "circle", "label": "Circle" },
              { "value": "stroke", "label": "Stroke (outlined text)" }
            ]
          },
          {
            "type": "color",
            "id": "highlight_color",
            "label": "Highlight color",
            "default": "#D43747"
          },
          {
            "type": "color",
            "id": "highlight_text_color",
            "label": "Text color",
            "default": "#000"
          },
          {
            "type": "range",
            "id": "heading_size",
            "label": "Heading size",
            "min": 100,
            "max": 200,
            "step": 10,
            "default": 130,
            "unit": "%"
          },
          {
            "type": "richtext",
            "id": "content",
            "label": "Text",
            "default": "<p>Share details about a promotion, welcome customers, describe a product, or talk about your brand.</p>"
          },
          {
            "type": "range",
            "id": "text_size",
            "label": "Text size",
            "default": 130,
            "min": 75,
            "max": 175,
            "step": 5,
            "unit": "%"
          },
          {
            "type": "header",
            "content": "Button"
          },
          {
            "type": "text",
            "id": "button_text",
            "label": "Text",
            "default": "Button text",
            "info": "Leave blank to link entire image"
          },
          {
            "type": "url",
            "id": "button_link",
            "label": "Link"
          },
          {
            "type": "select",
            "id": "button_color",
            "label": "Button color",
            "default": "btn--black",
            "options": [
              { "label": "Primary", "value": "btn--primary" },
              { "label": "Secondary", "value": "btn--secondary" },
              { "label": "White", "value": "btn--white" },
              { "label": "Black", "value": "btn--black" }
            ]
          },
          {
            "type": "select",
            "id": "button_style",
            "label": "Button style",
            "default": "btn--solid",
            "options": [
              { "label": "Solid", "value": "btn--solid" },
              { "label": "Outline", "value": "btn--outline" },
              { "label": "Solid with border", "value": "btn--solid-border" },
              { "label": "Text", "value": "btn--text" }
            ]
          },
          {
            "type": "select",
            "id": "button_size",
            "label": "Size",
            "default": "btn--small",
            "options": [
              { "label": "Large", "value": "btn--large" },
              { "label": "Medium", "value": "btn--medium" },
              { "label": "Small", "value": "btn--small" }
            ]
          },
          {
            "type": "text",
            "id": "video_link",
            "label": "Video button link",
            "info": "Video links from YouTube, Vimeo or MP4 video link from [files](/admin/content/files?selectedView=all&media_type=VIDEO)"
          },
          {
            "type": "text",
            "id": "video_text",
            "label": "Play button text"
          }
        ]
      }
    ],
    "presets": [
      {
        "name": "Sticky images and text: Horizontal",
        "category": "Image",
        "blocks": [
          {
            "type": "slide",
            "settings": {
              "subheading": "New this month",
              "title": "<p>Our latest obsessions.</p>",
              "content": "<p>We believe that fashion should be stylish, affordable and accessible to everyone. <\/p>",
              "text_size": 125,
              "button_text": "Shop now",
              "video_link": "https:\/\/www.youtube.com\/watch?v=_9VUPq3SxOc",
              "video_text": "Play video"
            }
          },
          {
            "type": "slide",
            "settings": {
              "title": "<p>Sustainable trends you'll love!</p>",
              "content": "<p>Our mission is to empower people through sustainable fashion.<\/p>",
              "button_text": "Learn more",
              "text_size": 125
            }
          },
          {
            "type": "slide",
            "settings": {
              "subheading": "Lookbooks",
              "title": "<p>Summer 2024</p>",
              "content": "<p>Our latest lookbook has dropped and is now ready to shop. Tailored to elevate your style<\/p>",
              "button_text": "View lookbook",
              "text_size": 125
            }
          }
        ]
      },
      {
        "name": "Sticky images and text: Vertical",
        "category": "Image",
        "settings": {
          "scroll_direction": "vertical",
          "text_alignment": "right",
          "image_position": "is-reversed"
        },
        "blocks": [
          {
            "type": "slide",
            "settings": {
              "subheading": "New this month",
              "title": "<p>Our latest obsessions.</p>",
              "content": "<p>We believe that fashion should be stylish, affordable and accessible to everyone. <\/p>",
              "button_text": "Shop now",
              "video_link": "https:\/\/www.youtube.com\/watch?v=_9VUPq3SxOc",
              "video_text": "Play video"
            }
          },
          {
            "type": "slide",
            "settings": {
              "title": "<p>Sustainable trends you'll love!</p>",
              "content": "<p>Our mission is to empower people through sustainable fashion.<\/p>",
              "button_text": "Learn more"
            }
          },
          {
            "type": "slide",
            "settings": {
              "subheading": "Lookbooks",
              "title": "<p>Summer 2024</p>",
              "content": "<p>Our latest lookbook has dropped and is now ready to shop. Tailored to elevate your style<\/p>",
              "button_text": "View lookbook"
            }
          }
        ]
      }
    ],
    "disabled_on": {
      "groups": ["header","aside","footer"]
    }
  }
{% endschema %}
